<?php
/**
 * Copyright (C) 2015 Orange
 *
 * This software is confidential and proprietary information of Orange.
 * You shall not disclose such Confidential Information and shall use it only
 * in accordance with the terms of the agreement you entered into.
 * Unauthorized copying of this file, via any medium is strictly prohibited.
 *
 * If you are Orange employee you shall use this software in accordance with
 * the Orange Source Charter (http://opensource.itn.ftgroup/index.php/Orange_Source).
 */

namespace Oft\Test\Util;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-06-26 at 10:55:55.
 */
class ErrorHandlerTest extends \PHPUnit_Framework_TestCase
{
    protected $errorReporting;
    
    protected function setUp()
    {
        $this->errorReporting = ini_get('error_reporting');
        ini_set('error_reporting', E_ALL & ~E_NOTICE);
    }
    
    public function tearDown()
    {
        ini_set('error_reporting', $this->errorReporting);
        restore_error_handler();
    }
    
    public function testThrowExceptionOnNotice()
    {
        $this->setExpectedException("\ErrorException");
        
        \Oft\Util\ErrorHandler::register(true);
        
        $tab = array();
        $tab[0]; // Notice : Undefined offset: 0
    }
    
    public function testDontThrowExceptionOnNotice()
    {
        $this->setExpectedException($exceptionName);
        
        \Oft\Util\ErrorHandler::register(false);
        
        $tab = array();
        $tab[0]; // Notice : Undefined offset: 0
    }
    
    public function testThrowExceptionOnWarning()
    {
        $this->setExpectedException("\ErrorException");
        
        \Oft\Util\ErrorHandler::register(true);
        
        fopen(); // Warning : fopen() expects at least 2 parameters, 0 given
    }
    
    public function testDontThrowExceptionIfSilenced()
    {
        \Oft\Util\ErrorHandler::register(true);
        
        @fopen(); // Warning : fopen() expects at least 2 parameters, 0 given
    }
}
