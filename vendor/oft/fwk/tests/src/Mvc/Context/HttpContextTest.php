<?php
/**
 * Copyright (C) 2015 Orange
 *
 * This software is confidential and proprietary information of Orange.
 * You shall not disclose such Confidential Information and shall use it only
 * in accordance with the terms of the agreement you entered into.
 * Unauthorized copying of this file, via any medium is strictly prohibited.
 *
 * If you are Orange employee you shall use this software in accordance with
 * the Orange Source Charter (http://opensource.itn.ftgroup/index.php/Orange_Source).
 */

namespace Oft\Mvc\Context;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-25 at 12:38:43.
 */
class HttpContextTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var HttpContext
     */
    protected $httpContext;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->httpContext = new HttpContext;
    }

    public function testGetRequestAfterContructThrowException()
    {
        $this->assertNull($this->httpContext->request);
    }

    public function testGetResponseAfterContructThrowException()
    {
        $this->assertNull($this->httpContext->response);
    }

    public function testGetSessionAfterContructThrowException()
    {
        $this->assertNull($this->httpContext->session);
    }

    /**
     * @covers Oft\Mvc\Context\HttpContext::setRequest
     * @todo   Implement testSetRequest().
     */
    public function testSetRequest()
    {
        $request = \Mockery::mock('Oft\Http\RequestInterface');

        $this->httpContext->setRequest($request);

        $this->assertSame($request, $this->httpContext->request);
    }

    /**
     * @covers Oft\Mvc\Context\HttpContext::setResponse
     * @todo   Implement testSetResponse().
     */
    public function testSetResponse()
    {
        $response = \Mockery::mock('Oft\Http\ResponseInterface');

        $this->httpContext->setResponse($response);

        $this->assertSame($response, $this->httpContext->response);
    }

    /**
     * @covers Oft\Mvc\Context\HttpContext::setSession
     * @todo   Implement testSetSession().
     */
    public function testSetSession()
    {
        $session = \Mockery::mock('Oft\Http\SessionInterface');

        $this->httpContext->setSession($session);

        $this->assertSame($session, $this->httpContext->session);
    }

}
